#!/usr/bin/sh

if [ -z "$1" ]; then
    echo "Merge 4 pages in one from a PDF file."
    echo "Usage: pdf-join2x2 [in.pdf]"
    exit
fi

n=$(pdftk "$1" dump_data | grep NumberOfPages | awk '{print $2}')
i=1

# header
printf "\\documentclass[a4paper]{article}\n"
printf "\\usepackage[margin=0mm,nohead,nofoot]{geometry}\n"
printf "\\usepackage{pdfpages}\n"
printf "\\pagestyle{empty}\n"
printf "\\parindent0pt\n"
printf "\\"
printf "newcommand\\doc{$(realpath "$1")}\n"
printf "\n\\"
printf "begin{document}\n"

# add all merges
while [ "$i" -le "$((n-4))" ]; do
    printf "\t\\includepdfmerge[nup=2x2,landscape]{\\doc,$i,\\doc,$((i+1)),\\doc,$((i+2)),\\doc,$((i+3))}\n"
    i=$((i+4))
done

# take into account last pages
if [ "$i" -eq "$((n))" ]; then
    printf "\t\\includepdfmerge[nup=2x2,landscape]{\\doc,$i}\n"
elif [ "$i" -eq "$((n-1))" ]; then
    printf "\t\\includepdfmerge[nup=2x2,landscape]{\\doc,$i,\\doc,$((i+1))}\n"
elif [ "$i" -eq "$((n-2))" ]; then
    printf "\t\\includepdfmerge[nup=2x2,landscape]{\\doc,$i,\\doc,$((i+1)),\\doc,$((i+2))}\n"
elif [ "$i" -eq "$((n-3))" ]; then
    printf "\t\\includepdfmerge[nup=2x2,landscape]{\\doc,$i,\\doc,$((i+1)),\\doc,$((i+2)),\\doc,$((i+3))}\n"
fi

echo "\\end{document}"
